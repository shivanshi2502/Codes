//binary Search in a nearly sorted array

#include <iostream>
using namespace std;
int binarySearch(int arr[], int size, int target){
    int s=0;
    int e=size-1;
    int m=s+(e-s)/2;
    while(s<=e){
        if(arr[m]==target){
            return m;
        }
        else if(arr[m-1]== target && (mid-1)>=0){
            return m-1;
        }
        else if(arr[m+1]== target && (mid+1)<=arr.size()){
            return m+1;
        }
        if(arr[m]> target){
            e=m-2;
        }
        else{
            s=m+2;
        }
        m=s+(e-s)/2;
    }
    return -1;
}
int main()
{
    int n;
    cout<<"enter no of elements in array"<<endl;
    cin>>n;
    int arr[1000];
    cout<<"enter the elements in array"<<endl;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int target;
    cout<<"enter target element"<<endl;
    cin>>target;
    int ans= binarySearch(arr,n,target);
    if(ans==-1){
        cout<<"element doesnot exists"<<endl;
    }
    else{
        cout<<"the element exists at index"<<ans<<endl;
    }
    return 0;
}
