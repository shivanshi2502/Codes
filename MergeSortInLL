ListNode* FindMid(ListNode*& head){
        ListNode*slow=head;
        ListNode*fast=head->next;
        while(fast!=NULL){
            fast=fast->next;
            if(fast!=NULL){
                fast=fast->next;
                slow=slow->next;
            }
        }
        return slow;
    }
    ListNode* merge(ListNode* &left,ListNode* &right){
        if(right==NULL){
            return left;
        }
        if(left==NULL){
            return right;
        }
        ListNode*newhead=new ListNode(-1);
        ListNode*temp=newhead;
        while(left!=NULL&&right!=NULL){
            if(left->val >= right->val){
                temp->next=right;
                temp=right;
                right=right->next;
            }
            else if(right->val > left->val){
                temp->next=left;
                temp=left;
                left=left->next;
            }
        }
        if(left){
            temp->next=left;
        }
        if(right){
            temp->next=right;
        }
        temp=newhead;
        newhead=newhead->next;
        temp->next=NULL;
        delete temp;
        return newhead;
    }
    ListNode* sortList(ListNode* head) {
        if(head==NULL||head->next==NULL){
            return head;
        }
        //merge sort
        ListNode*mid=FindMid(head);
        ListNode*left=head;
        ListNode*right=mid->next;
        mid->next=NULL;
        left=sortList(left);
        right=sortList(right);
        ListNode*AnsKaHead=merge(left,right);
        return AnsKaHead;
    }
