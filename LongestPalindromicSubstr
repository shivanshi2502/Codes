string ExpandAround(string s, int i, int j){
        string ans="";
        while(i>=0 && j<s.length() && s[i]==s[j]){
            ans=s.substr(i,j-i+1);
            i--;
            j++;
        }
        return ans;
    }
    string longestPalindrome(string s) {
        int n=s.length();
        string st;
        vector<string> Answer;
        for(int i=0;i<n;i++){
            Answer.push_back(ExpandAround(s,i,i));
            Answer.push_back(ExpandAround(s,i,i+1));
        }
        int max=0;
        for(int i=0;i<Answer.size();i++){
            if(Answer[i].length()> max){
                st=Answer[i];
                max=Answer[i].length();
            }
        }
        return st;
    }
