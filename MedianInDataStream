#include <iostream>
#include<queue>
using namespace std;
void findMedian(int num,int &median,priority_queue<int>&max,priority_queue<int,vector<int>,greater<int>>&min){
    if(max.size()==min.size()){
        if(num>=median){
            min.push(num);
            median=min.top();
        }
        else{
            max.push(num);
            median=max.top();
        }
    }
    else if(max.size()>min.size()){
        if(num>=median){
            min.push(num);
            median=(min.top()+max.top())/2;
        }
        else{
            int temp=max.top();
            max.pop();
            min.push(temp);
            max.push(num);
            median=(min.top()+max.top())/2;
        }
    }
    else{
        //max.size()<min.size()
        if(num<median){
            max.push(num);
            median=(min.top()+max.top())/2;
        }
        else{
            int temp=min.top();
            min.pop();
            max.push(temp);
            min.push(num);
            median=(min.top()+max.top())/2;
        }
    }
}
int main()
{
    int arr[6]={5,7,2,9,3,8};
    int size=6;
    priority_queue<int>max;
    priority_queue<int,vector<int>,greater<int>>min;
    int median=0;
    for(int i=0;i<size;i++){
        findMedian(arr[i],median,max,min);
        cout<<"->"<<median<<endl;
    }
}
