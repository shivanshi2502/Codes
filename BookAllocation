//book allocation problem

bool possible(vector<int>& arr, int n, int m, int mid){
    int c=1;
    int pagesum=0;
    for(int i=0;i<arr.size();i++){
        if(arr[i]> mid){
            return false;
        }
        else if( pagesum+ arr[i] > mid){
            pagesum= arr[i];
            c++;
            if(c>m){
                return false;
            }
        }
        else{
            pagesum=pagesum+arr[i];
        }
    }
    return true;
}
int findPages(vector<int>& arr, int n, int m) {
    if(m>n){
        return -1;
    }
    int s=0;
    int e=0;
    for(int i=0;i<arr.size();i++){
        e=e+arr[i];
    }
    int mid=s+(e-s)/2;
    int ans=-1;
    while(s<=e){
        if(possible(arr,n,m,mid)){
            //store and find minimum i.e go left
            ans=mid;
            e=mid-1;
        }
        else{
            s=mid+1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}
