class info{
        public:
        int x;
        int y;
        int d;
        info(int x,int y,int d){
            this->x=x;
            this->y=y;
            this->d=d;
        }
    };
    class comp{
        public:
        bool operator()(info*a,info*b){
            return a->d > b->d;
        }
    };
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<info*,vector<info*>,comp>pq;
        for(int i=0;i<points.size();i++){
            int dist=0;
            for(int j=0;j<points[i].size();j++){
                dist=dist+pow(points[i][j],2);
            }
            info*temp=new info(points[i][0],points[i][1],dist);
            pq.push(temp);
        }
        vector<vector<int>>ans;
        for(int i=0;i<k;i++){
            vector<int>output;
            info*topNode=pq.top();
            pq.pop();
            output.push_back(topNode->x);
            output.push_back(topNode->y);
            ans.push_back(output);
        }
        return ans;
    }
