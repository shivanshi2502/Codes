//Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.
Return any possible rearrangement of s or return "" if not possible.

string reorganizeString(string s) {
        int n=s.length();
        int hash[26]={0};
        for(int i=0;i<n;i++){
            hash[s[i]-'a']++;
        }
        int maxi=INT_MIN; //frequency of most occurent char
        int maxIndex;
        for(int i=0;i<26;i++){
            if(hash[i]>maxi){
                maxi=hash[i];
                maxIndex=i;
            }
        }
        char maxChar= maxIndex +'a'; //most occurent char
        int index=0;
        while(index<n && maxi>0){
            s[index]= maxChar;
            index=index+2;
            maxi--;
        }
        if(maxi!=0){
            return "";
        }
        hash[maxIndex]=0;
        for(int i=0;i<26;i++){
            while(hash[i]>0){
                if(index>=s.size()){
                    index=1;
                }
                else{
                    index=index;
                }
                s[index]=i+'a';
                index=index+2;
                hash[i]--;
            }
        }
        return s;
    }
